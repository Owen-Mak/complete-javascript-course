2-JS-basics

2 ways to add javascript
1) inline script  <script> </script>
2) external script
    a) create new js file
    b) add source code
    c) add script tag with tag src={file name}
    preferred method is to have code on external file 
    - allows us to keep html and js in seperate file

Intro:
Relationship between html, css, js
 Html: content (text, images, buttons) - nouns
 css: presentation (styling, layouts) - adjectives, describes the nouns
 js: dynamic effects, programming - verb, doing something

 Datatypes
 Number, string, boolean, 
 undefined - data type of a variable that does not have a value yet (uninitialized?); declare variable without assignment
 null - means non-existent, more specific than undefined

dynamic typing - do not have to manually define a data type

convention: camel case 
rules - cannot start variable with a number
    - can start with dollar sign or underscore
    - cannot start with keywords

Variable Mutation and Type Coercion
type coercion - javascript automatically converts one type to another as it is needed
variable mutation - change value of a variable? does he mean data type as well?

operators
associativity - the direction in which operators are executed

Truthy - all values considered true in an if-else statement; all values that are not falsy
Falsy -  undefined, null, zero, empty string and not a number (NaN)
  - not exaclty false, but will become false if evaluated in an if-else statement

  statement - does not return anything
  expression - pieces of code always produce a value;  does not matter how long they are, always returns a value

*************************************
3-how-JS-works
where is it used?
- most typically hosted in a browser; applications that accept javascript input; node js server

javascript engine - program that executes javascript code

code -> parser -> (abstract syntax tree) -> machine code (byte code) -> execute code

execution context -> environments to run javascript (aka box, container); stores variables in which code is executed
    - contains variable object (VO), scope chain, this variable
- default context is global execution context (variables and functions not inside of any function)
- ALL code not inside a function is executed

global object - in a browser, window object; associated with global execution context
    - anything declared in global object is attached to window object

- each time a new funciton is called , it gets its own execution context

hoisting - act of moving all declarations to the top of the scope; allows variables/functions to be used before they are declared
    - functions and variables are avaialble and defined before execution phase starts
    - variables are set as undefined before the execution phase
